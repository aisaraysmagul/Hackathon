import pyowm as pyowm
import telebot
import constants
import urllib.request, json
import pypyodbc
from telebot import types
import requests, bs4

bot = telebot.TeleBot(constants.token)


#upd = bot.get_updates()
#print(upd)
#last_upd = upd[-1]
#message_from_user = last_upd.message
#print(message_from_user)

#print(bot.get_me())

server = 'DESKTOP-MDK8SUM'
db = 'teleBot'
connection = pypyodbc.connect('Driver={SQL Server};'
                              'Server=' + server + ';'
                              'Database=' + db + ';')

#results = cursor.fetchall()
#print(results)
#connection.close()

s = ""
food = ""
ulat=0
ulng=0
string =""
cry = ""
money=""


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row("üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üèî –ì–¥–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üè™ –ë–ª–∏–∂–∞–π—à–∏–µ –º–∞–≥–∞–∑–∏–Ω—ã/—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã")
    user_markup.row("üè• –ë–ª–∏–∂–∞–π—à–∏–µ –±–æ–ª—å–Ω–∏—Ü—ã")
    user_markup.row("üìù –ü–ª–∞–Ω–Ω–µ—Ä")
    user_markup.row("üá∞üáø –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç")
    user_markup.row("‚õÖÔ∏è –ü–æ–≥–æ–¥–∞")
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', reply_markup=user_markup)

@bot.message_handler(commands=['help'])
def handle_text(message):
    bot.send_message(message.chat.id, "–ü–æ–º–æ—â—å")


@bot.message_handler(content_types=['text'])
def handle_text(message):
    global s, food, cry, money
    if message.text == "üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        near = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—à–∏–µ")
        spisok = telebot.types.KeyboardButton(text="–í –≥–æ—Ä–æ–¥–µ")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(near, spisok, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=keyboard)
    elif message.text == "–ë–ª–∏–∂–∞–π—à–∏–µ":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        asian = telebot.types.KeyboardButton(text="–ê–∑–∏–∞—Ç—Å–∫–∞—è")
        national = telebot.types.KeyboardButton(text="–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è")
        europian = telebot.types.KeyboardButton(text="–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è")
        turkish = telebot.types.KeyboardButton(text="–¢—É—Ä–µ—Ü–∫–∞—è")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(national, asian, europian, turkish, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é", reply_markup=keyboard)
        s = "nearbyfood"
    elif message.text == "–ê–∑–∏–∞—Ç—Å–∫–∞—è":
        k = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        mesto = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        k.add(mesto, back)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=k)
        food = "asian+food"
    elif message.text == "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è":
        k = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        mesto = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        k.add(mesto, back)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=k)
        food = "national+food"
    elif message.text == "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è":
        k = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        mesto = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        k.add(mesto, back)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=k)
        food = "european+food"
    elif message.text == "–¢—É—Ä–µ—Ü–∫–∞—è":
        k = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        mesto = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        k.add(mesto, back)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=k)
        food = "turkish+food"
    elif message.text == "–í –≥–æ—Ä–æ–¥–µ":
        k = telebot.types.InlineKeyboardMarkup()
        asian = telebot.types.InlineKeyboardButton(text="–ê–∑–∏–∞—Ç—Å–∫–∞—è", url="https://www.visitalmaty.kz/ru/cuisines")
        national = telebot.types.InlineKeyboardButton(text="–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è", url="https://www.visitalmaty.kz/ru/cuisines")
        europian = telebot.types.InlineKeyboardButton(text="–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è", url="https://www.visitalmaty.kz/ru/cuisines")
        turkish = telebot.types.InlineKeyboardButton(text="–¢—É—Ä–µ—Ü–∫–∞—è", url = "https://www.visitalmaty.kz/ru/cuisines")
        k.add(asian, national, europian, turkish)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é", reply_markup=k)
    elif message.text == "‚õÖ –ü–æ–≥–æ–¥–∞":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(back)
        city = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –í–∞–º –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É?", reply_markup=keyboard)
        bot.register_next_step_handler(city, weath)
    elif message.text == "‚óÄ –ù–∞–∑–∞–¥":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row("üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üèî –ì–¥–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üè™ –ë–ª–∏–∂–∞–π—à–∏–µ –º–∞–≥–∞–∑–∏–Ω—ã/—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã")
        user_markup.row("üè• –ë–ª–∏–∂–∞–π—à–∏–µ –±–æ–ª—å–Ω–∏—Ü—ã")
        user_markup.row("üìù –ü–ª–∞–Ω–Ω–µ—Ä")
        user_markup.row("üá∞üáø –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç")
        user_markup.row("‚õÖ –ü–æ–≥–æ–¥–∞")
        bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', reply_markup=user_markup)
    elif message.text == "üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—à–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–í—Å–µ –º–µ—Å—Ç–∞")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(button, listed, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ", reply_markup=keyboard)
        s = "hotel"
    elif message.text == "–í—Å–µ –º–µ—Å—Ç–∞":
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å",
                                                   url="https://www.visitalmaty.kz/ru/accomodations")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è", reply_markup=key)

    elif message.text == "üï∫ –ì–¥–µ –ø—Ä–æ–≤–µc—Ç–∏ –≤—Ä–µ–º—è –≤ –ê–ª–º–∞—Ç—ã ?":
        s = requests.get('https://sxodim.com/almaty/events/vystavki/?show=today')

        b = bs4.BeautifulSoup(s.text, "html.parser")

        l = b.select('.news_list .location')

        d = b.select('.news_list .date')

        c = b.select('.news_list .cost')

        for i in range(0, len(l)):
            n1 = l[i].getText()
            n2 = d[i].getText()
            n3 = c[i].getText()
            bot.send_message(message.chat.id,"üìå" + n1 + "\nüìÜ " + n2 + "\nüíµ " + n3)
            keyboard = telebot.types.InlineKeyboardMarkup()
            button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test2" + str(i))
            keyboard.add(button)
            bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif message.text == "üè• –ë–ª–∏–∂–∞–π—à–∏–µ –±–æ–ª—å–Ω–∏—Ü—ã":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button = telebot.types.KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(button)
        keyboard.add(back)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ª–æ–∫–∞—Ü–∏—é: ", reply_markup=keyboard)
        s = "hospital"

    elif message.text == "üè™ –ë–ª–∏–∂–∞–π—à–∏–µ –º–∞–≥–∞–∑–∏–Ω—ã/—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button = telebot.types.KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(back, button)
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ª–æ–∫–∞—Ü–∏—é: ", reply_markup=keyboard)
        s = "store"

    elif message.text == "üöï –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç":
        sqlQuery  = ("""
                    SELECT Name, Number 
                    FROM dbo.Taxi
        """)
        cursor = connection.cursor()
        cursor.execute(sqlQuery)
        results = cursor.fetchall()
        for row in results:
            Name = row[0]
            Number = row[1]
            print(str(Name),str(Number))
            bot.send_message(message.chat.id, "üöï " + str(Name) + "üìû " + str(Number))
    elif message.text == "üìù –ü–ª–∞–Ω–Ω–µ—Ä":
        global string
        bot.send_message(message.chat.id, "–ü–ª–∞–Ω–Ω–µ—Ä –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: ")
        query1 = ("SELECT NAME, ADDRESS FROM dbo.food")
        cursor = connection.cursor()
        cursor.execute(query1)
        results = cursor.fetchall()
        for row in results:
            NAME = row[0]
            ADDRESS = row[1]
            print(str(NAME),str(ADDRESS))
            string += " üçΩ "+str(NAME)+" "+str(ADDRESS)+" "
        query2 = ("SELECT location, cost FROM dbo.event1")
        cursor = connection.cursor()
        cursor.execute(query2)
        results = cursor.fetchall()
        for row in results:
            location = row[0]
            cost = row[1]
            print(str(location), str(cost))
            string += "üï∫ " + str(location)+" "+str(cost)+" "
        query3 = ("SELECT name, description FROM dbo.Mountain")
        cursor = connection.cursor()
        cursor.execute(query3)
        results = cursor.fetchall()
        for row in results:
            name = row[0]
            description = row[1]
            print(str(name), str(description))
            string += "üï∫ " + str(name)+" "+str(description)+" "
        query4 = ("SELECT name, address FROM dbo.park")
        cursor = connection.cursor()
        cursor.execute(query4)
        results = cursor.fetchall()
        for row in results:
            name = row[0]
            address = row[1]
            print(str(name), str(address))
            string += "üï∫ " + str(name) + " " + str(address) + " "
        query5 = ("SELECT name, address FROM dbo.trc")
        cursor = connection.cursor()
        cursor.execute(query5)
        results = cursor.fetchall()
        for row in results:
            name = row[0]
            address = row[1]
            print(str(name), str(address))
            string += "üï∫ " + str(name) + " " + str(address) + " "
        bot.send_message(message.chat.id, string)
        string = " "
    elif message.text == "üá∞üáø –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button1 = telebot.types.KeyboardButton(text="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ KZT ‚û°")
        button2 = telebot.types.KeyboardButton(text="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ KZT ‚¨Ö")
        keyboard.add(button1, button2)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞: ", reply_markup=keyboard)

    elif message.text == "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ KZT ‚û°":
        money = "kzt"
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        usd = telebot.types.KeyboardButton(text="KZT -> USD üá∫üá∏")
        gbp = telebot.types.KeyboardButton(text="KZT -> GBP üá¨üáß")
        cny = telebot.types.KeyboardButton(text="KZT -> CNY üá®üá≥")
        krw = telebot.types.KeyboardButton(text="KZT -> KRW üá∞üá∑")
        rur = telebot.types.KeyboardButton(text="KZT -> RUR üá∑üá∫")
        eur = telebot.types.KeyboardButton(text="KZT -> EUR üá™üá∫")
        jpy = telebot.types.KeyboardButton(text="KZT -> JPY üáØüáµ")
        kgs = telebot.types.KeyboardButton(text="KZT -> KGS üá∞üá¨")
        uzs = telebot.types.KeyboardButton(text="KZT -> UZS üá∫üáø")
        chf = telebot.types.KeyboardButton(text="KZT -> CHF üá®üá≠")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(usd, gbp, cny, krw, rur, eur, jpy, kgs, uzs, chf, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É: ", reply_markup=keyboard)
    elif message.text == "KZT -> USD üá∫üá∏":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "USD"
    elif message.text == "KZT -> GBP üá¨üáß":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "GBP"
    elif message.text == "KZT -> CNY üá®üá≥":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "CNY"
    elif message.text == "KZT -> KRW üá∞üá∑":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "KRW"
    elif message.text == "KZT -> RUR üá∑üá∫":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "RUR"
    elif message.text == "KZT -> EUR üá™üá∫":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "EUR"
    elif message.text == "KZT -> JPY üáØüáµ":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "JPY"
    elif message.text == "KZT -> KGS üá∞üá¨":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "KGS"
    elif message.text == "KZT -> UZS üá∫üáø":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "UZS"
    elif message.text == "KZT -> CHF üá®üá≠":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "CHF"

    elif message.text == "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ KZT ‚¨Ö":
        money = "curr"
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        usd = telebot.types.KeyboardButton(text="üá∫üá∏ USD -> KZT")
        gbp = telebot.types.KeyboardButton(text="üá¨üáß GBP -> KZT")
        cny = telebot.types.KeyboardButton(text="üá®üá≥ CNY -> KZT")
        krw = telebot.types.KeyboardButton(text="üá∞üá∑ KRW -> KZT")
        rur = telebot.types.KeyboardButton(text="üá∑üá∫ RUR -> KZT")
        eur = telebot.types.KeyboardButton(text="üá™üá∫ EUR -> KZT")
        jpy = telebot.types.KeyboardButton(text="üáØüáµ JPY -> KZT")
        kgs = telebot.types.KeyboardButton(text="üá∞üá¨ KGS -> KZT")
        uzs = telebot.types.KeyboardButton(text="üá∫üáø UZS -> KZT")
        chf = telebot.types.KeyboardButton(text="üá®üá≠ CHF -> KZT")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(usd, gbp, cny, krw, rur, eur, jpy, kgs, uzs, chf)
        keyboard.add(back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É: ", reply_markup=keyboard)

    elif message.text == "üá∫üá∏ USD -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "USD1"
    elif message.text == "üá¨üáß GBP -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "GBP1"
    elif message.text == "üá®üá≥ CNY -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "CNY1"
    elif message.text == "üá∞üá∑ KRW -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "KRW1"
    elif message.text == "üá∑üá∫ RUR -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "RUR1"
    elif message.text == "üá™üá∫ EUR -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "EUR1"
    elif message.text == "üáØüáµ JPY -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "JPY1"
    elif message.text == "üá∞üá¨ KGS -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "KGS1"
    elif message.text == "üá∫üáø UZS -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "UZS1"
    elif message.text == "üá®üá≠ CHF -> KZT":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ")
        cry = "CHF1"

    elif message.text == "üèî –ì–¥–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row("‚ö±Ô∏è –ú—É–∑–µ–∏")
        user_markup.row("üèî –ì–æ—Ä—ã")
        user_markup.row("üé° –ü–∞—Ä–∫–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π")
        user_markup.row("–¢–†–¶")
        user_markup.row("–ö—É—Ä–æ—Ä—Ç–Ω—ã–µ –∑–æ–Ω—ã")
        user_markup.row("‚óÄ –ù–∞–∑–∞–¥")
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞', reply_markup=user_markup)

    elif message.text == "‚ö±Ô∏è –ú—É–∑–µ–∏":
        with urllib.request.urlopen(
                "https://maps.googleapis.com/maps/api/place/textsearch/json?query=museum+in+Almaty&keyword=food&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['formatted_address']
                keyboard = telebot.types.InlineKeyboardMarkup()
                button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test3" + str(i))
                keyboard.add(button)
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                else:
                    opennow = "unknown"
                if ('rating' in data[i]):
                    rating = data[i]['rating']
                else:
                    rating = "unknown"
                bot.send_message(message.chat.id, "____________________________________")
                bot.send_message(message.chat.id,
                                 "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                     address) + "\n" + "‚≠êÔ∏è rating: " + str(
                                     rating) + "\n" + "üö™ Open/Close: " + opennow + "\n" + "üìç location: ")
                bot.send_location(message.chat.id, lat, lng)
                bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif message.text == "üé° –ü–∞—Ä–∫–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π":
        with urllib.request.urlopen(
                "https://maps.googleapis.com/maps/api/place/textsearch/json?query=amusement_park+in+Almaty&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['formatted_address']
                keyboard = telebot.types.InlineKeyboardMarkup()
                button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test4" + str(i))
                keyboard.add(button)
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                else:
                    opennow = "unknown"
                if ('rating' in data[i]):
                    rating = data[i]['rating']
                else:
                    rating = "unknown"
                bot.send_message(message.chat.id, "____________________________________")
                bot.send_message(message.chat.id,
                                 "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                     address) + "\n" + "‚≠êÔ∏è rating: " + str(
                                     rating) + "\n" + "üö™ Open/Close: " + opennow + "\n" + "üìç location: ")
                bot.send_location(message.chat.id, lat, lng)
                bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif message.text == "–¢–†–¶":
        with urllib.request.urlopen(
                "https://maps.googleapis.com/maps/api/place/textsearch/json?query=shopping_mall+in+Almaty&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['formatted_address']
                keyboard = telebot.types.InlineKeyboardMarkup()
                button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test5" + str(i))
                keyboard.add(button)
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                else:
                    opennow = "unknown"
                if ('rating' in data[i]):
                    rating = data[i]['rating']
                else:
                    rating = "unknown"
                bot.send_message(message.chat.id, "____________________________________")
                bot.send_message(message.chat.id,
                                 "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                     address) + "\n" + "‚≠êÔ∏è rating: " + str(
                                     rating) + "\n" + "üö™ Open/Close: " + opennow + "\n" + "üìç location: ")
                bot.send_location(message.chat.id, lat, lng)
                bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif message.text == "–ö—É—Ä–æ—Ä—Ç–Ω—ã–µ –∑–æ–Ω—ã":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row("–®—ã–º–±—É–ª–∞–∫")
        user_markup.row("–í—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã–π –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ö–æ–º–ø–ª–µ–∫—Å –ú–ï–î–ï–£")
        user_markup.row("–ö–æ–∫-—Ç–æ–±–µ")
        user_markup.row("–ê–∫ –±—É–ª–∞–∫")
        user_markup.row("Home club")
        user_markup.row("‚óÄ –ù–∞–∑–∞–¥")
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ä—à—Ä—É—Ç: ', reply_markup=user_markup)
    elif message.text == "–ö–æ–∫-—Ç–æ–±–µ":
        bot.send_message(message.chat.id,"–ì–æ—Ä–∞ –ö–æ–∫-–¢–æ–±–µ, —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ—Å—Ç –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ö–æ–∫-—Ç–æ–±–µ", url="http://www.koktobe.com")
        key.add(mesta)
        keyboard = telebot.types.InlineKeyboardMarkup()
        bot.send_location(message.chat.id, 43.2249503, 76.93780819999999)
        bot.send_message(message.chat.id, "–ö–æ–∫-—Ç–æ–±–µ", reply_markup=key)
    elif message.text == "–í—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã–π –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ö–æ–º–ø–ª–µ–∫—Å –ú–ï–î–ï–£":
        bot.send_message(message.chat.id,
                         "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —é–∂–Ω–æ–π —Å—Ç–æ–ª–∏—Ü—ã –ê–ª–º–∞—Ç—ã - –∫–∞—Ç–æ–∫ –ú–µ–¥–µ–æ –∏–º–µ–µ—Ç –º–∏—Ä–æ–≤—É—é —Å–ª–∞–≤—É. –ú–µ–¥–µ–æ - —ç—Ç–æ —Å–∞–º—ã–π –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã–π –≤ –º–∏—Ä–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å. –≠—Ç–æ—Ç —Å–∫–∞–∑–æ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü –≤–ø–∏—Å–∞–ª—Å—è –≤ –ø–∞–Ω–æ—Ä–∞–º—É —É—â–µ–ª—å—è –Ω–∞ –≤—ã—Å–æ—Ç–µ 1961 –º–µ—Ç—Ä –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è. –¥–∞–≤–ª–µ–Ω–∏–µ, –±–µ–∑–≤–µ—Ç—Ä–∏–µ, —á–∏—Å—Ç–∞—è –≥–æ—Ä–Ω–∞—è –≤–æ–¥–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –≥–æ—Ç–æ–≤—è—Ç –ª—ë–¥ –∫–∞—Ç–∫–∞.")

        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ú–µ–¥–µ—É", url="http://medey.kz")
        key.add(mesta)
        bot.send_location(message.chat.id, 43.2089289, 76.9122691)
        bot.send_message(message.chat.id, "–í—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã–π –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ö–æ–º–ø–ª–µ–∫—Å –ú–ï–î–ï–£", reply_markup=key)
    elif message.text == "–®—ã–º–±—É–ª–∞–∫":
        bot.send_message(message.chat.id,
                         "–ß–∏–º–±—É–ª–∞–∫ ‚Äì —ç—Ç–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª–æ–≥–∏–µ –∏ –º—è–≥–∫–∏–µ —Å–∫–ª–æ–Ω—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö, –¥–ª–∏–Ω–Ω—ã–µ —Ç—Ä–∞—Å—Å—ã –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –ª—ã–∂–Ω–∏–∫–æ–≤, –§–ò–°-—Ç—Ä–∞—Å—Å—ã –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞, –¥–∏–∫–∏–µ –¥–æ–ª–∏–Ω—ã.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–®—ã–º–±—É–ª–∞–∫", url="https://www.shymbulak.com/contacts/")
        key.add(mesta)
        bot.send_location(message.chat.id, 43.119901, 77.097272)
        bot.send_message(message.chat.id, "–®—ã–º–±—É–ª–∞–∫", reply_markup=key)
    elif message.text == "–ê–∫ –±—É–ª–∞–∫":
        bot.send_message(message.chat.id,
                         "¬´–ê“õ –ë“±–ª–∞“õ¬ª –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –Ω–∞ —Ñ–æ–Ω–µ –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –≥–æ—Ä–Ω—ã—Ö –ø–µ–π–∑–∞–∂–µ–π.  –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω–æ–≥–æ –∫—É—Ä–æ—Ä—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞: —É–º–µ—Ä–µ–Ω–Ω—ã–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è ‚Äì –ø–µ—Ä–µ–ø–∞–¥ –≤—ã—Å–æ—Ç –æ—Ç 2600 –º –¥–æ 1400 –º –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è, —Å—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ª–µ—Ç–æ–º –æ—Ç +15 –¥–æ +2.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ê–∫ –±—É–ª–∞–∫", url="http://ak-bulak.kz")
        key.add(mesta)
        bot.send_location(message.chat.id, 43.2556675, 76.8049533)
        bot.send_message(message.chat.id, "–ê–∫ –±—É–ª–∞–∫", reply_markup=key)
    elif message.text == "Home club":
        bot.send_message(message.chat.id,
                         "–ò–∑—é–º–∏–Ω–∫–æ–π —Å–µ–º–µ–π–Ω–æ-—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å–∞ ¬´Home Club¬ª —è–≤–ª—è–µ—Ç—Å—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∏—Ä–æ–¥—ã.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="Home club", url="http://www.home-club.kz")
        key.add(mesta)
        bot.send_location(message.chat.id, 43.1541841, 76.5659784)
        bot.send_message(message.chat.id, "Home club", reply_markup=key)

    elif message.text == "üèî –ì–æ—Ä—ã":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row("–ö–æ–∫-–ñ–∞–π–ª—è—É")
        user_markup.row("–ü–∏–∫ –§—É—Ä–º–∞–Ω–æ–≤–∞")
        user_markup.row("–ë—É—Ç–∞–∫–æ–≤—Å–∫–∏–µ –≤–æ–¥–æ–ø–∞–¥—ã")
        user_markup.row("–ú—ã–Ω–∂–∏–ª–∫–∏")
        user_markup.row("–õ–µ—Å–Ω–æ–π –ø–µ—Ä–µ–≤–∞–ª")
        user_markup.row("‚óÄ –ù–∞–∑–∞–¥")
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ä—à—Ä—É—Ç: ', reply_markup=user_markup)

    elif message.text == "–ö–æ–∫-–ñ–∞–π–ª—è—É":
        bot.send_message(message.chat.id,
                         "–ö–æ–∫-–ñ–∞–π–ª—è—É, –∏–ª–∏ –ó–µ–ª–µ–Ω–æ–µ –ø–∞—Å—Ç–±–∏—â–µ ‚Äî –æ–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö –º–µ—Å—Ç –≤ –≥–æ—Ä–∞—Ö –ê–ª–º–∞—Ç—ã. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≤–æ—é –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –ø—Ä–æ–≥—É–ª–æ–∫ –≤ –≥–æ—Ä–Ω–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–æ –≥–æ–¥–∞")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ú–∞—Ä—à—É—Ä—Ç",
                                                   url="https://www.google.com/maps/dir/—É–ª.+–ì–æ—Ä–Ω–∞—è+550,+–ê–ª–º–∞—Ç—ã,+–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω/Kok+Zhailau,+Unnamed+Road,,+–ê–ª–º–∞—Ç—ã,+–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω/@43.1508555,77.011721,4395m/data=!3m1!1e3!4m14!4m13!1m5!1m1!1s0x38837b1dc375a513:0x250afa938525781e!2m2!1d77.0400669!2d43.1658753!1m5!1m1!1s0x388364b672b8c015:0x1732d09e1a098c24!2m2!1d77.0039902!2d43.1428419!3e2?hl=ru-RU")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –¥–æ –ö–æ–∫-–∂–∞–π–ª—è—É", reply_markup=key)
    elif message.text == "–ü–∏–∫ –§—É—Ä–º–∞–Ω–æ–≤–∞":
        bot.send_message(message.chat.id,
                         "–ü—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞ (—Å–æ —à–ª–∞–≥–±–∞—É–º–æ–º), —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–ª—É—Ç–æ—Ä–∞ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö –æ—Ç –í–°–ö ¬´–ú–µ–¥–µ—É¬ª.")
        bot.send_message(message.chat.id,
                         "–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∞—Å—Ñ–∞–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–æ—Ä–æ–≥–∞, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ö–æ—Ä–æ—à–∞—è –≥—Ä—É–Ω—Ç–æ–≤–∞—è —Ç—Ä–æ–ø–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –≥—Ä–µ–±–µ–Ω—å, –≤–µ–¥—É—â–∏–π –∫ –ø–∏–∫—É –§—É—Ä–º–∞–Ω–æ–≤–∞. –ò–¥–∏—Ç–µ –¥–∞–ª—å—à–µ –≤–≤–µ—Ä—Ö –ø–æ –≥—Ä–µ–±–Ω—é, –≤ —Å–∫–æ—Ä–æ–º –≤—ã —É–≤–∏–¥–∏—Ç–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–µ –Ω–∞ –∫–∞—á–µ–ª–∏, —ç—Ç–æ –º–µ—Å—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–§–ª–∞–≥¬ª.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ú–∞—Ä—à—É—Ä—Ç",
                                                   url="https://www.google.com/maps/@43.1542349,77.0836786,3116m/data=!3m2!1e3!4b1!4m2!6m1!1s1KTPoydxKbHNqKhHtNImIQMXroEw?hl=ru-RU")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –¥–æ –§—É—Ä–º–∞–Ω–æ–≤–∫–∏", reply_markup=key)

    elif message.text == "–ë—É—Ç–∞–∫–æ–≤—Å–∫–∏–µ –≤–æ–¥–æ–ø–∞–¥—ã":
        bot.send_message(message.chat.id,
                         "–î–≤–∞ –≤–æ–¥–æ–ø–∞–¥–∞ ‚Äî –ù–∏–∂–Ω–∏–π (–ë–æ–ª—å—à–æ–π) –∏ –í–µ—Ä—Ö–Ω–∏–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ë—É—Ç–∞–∫–æ–≤—Å–∫–æ–º —É—â–µ–ª—å–µ. –î–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –≤–æ–¥–æ–ø–∞–¥–æ–≤ –≤–ø–æ–ª–Ω–µ –ª–µ–≥–∫–æ. –£–¥–æ–±–Ω–æ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –Ω–∏–º –æ—Ç –≤—Ç–æ—Ä–æ–≥–æ —à–ª–∞–≥–±–∞—É–º–∞ –≤ –ë—É—Ç–∞–∫–æ–≤—Å–∫–æ–º —É—â–µ–ª—å–µ, –¥–æ–±—Ä–∞–≤—à–∏—Å—å –¥–æ –Ω–µ–≥–æ –Ω–∞ –º–∞—à–∏–Ω–µ. –ï—Å–ª–∏ –∂–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ç–æ –º–æ–∂–Ω–æ –¥–æ–µ—Ö–∞—Ç—å –¥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ –Ω–∞ –ë—É—Ç–∞–∫–æ–≤–∫—É –Ω–∞ 29-–æ–º –∞–≤—Ç–æ–±—É—Å–µ. ")
        bot.send_message(message.chat.id,
                         "–î–∞–ª–µ–µ –¥–æ–π–¥—è –¥–æ –ø–µ—Ä–≤–æ–≥–æ —à–ª–∞–≥–±–∞—É–º–∞ —Å–ª–µ–¥—É–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ—Ö–æ–¥ –Ω–∞ –ë—É—Ç–∞–∫–æ–≤–∫—É. –ü—Ä–æ–π–¥—è –ø–µ—Ä–≤–æ–µ –æ–≥—Ä–∞–∂–¥–µ–Ω–∏–µ, –Ω—É–∂–Ω–æ –∏–¥—Ç–∏ –¥–æ –≤—Ç–æ—Ä–æ–≥–æ, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º, —á–µ—Ä–µ–∑ –¥–≤–∞ –∫–∏–ª–æ–º–µ—Ç—Ä–∞ –±—É–¥–µ—Ç –±–∞–∑–∞ ¬´–≠–∫—Å—Ç—Ä–∏–º¬ª, –æ—Ç –Ω–µ–µ –ø–æ —Ç—Ä–æ–ø–∏–Ω–∫–µ –æ–∫–æ–ª–æ 800 –º–µ—Ç—Ä–æ–≤ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ù–∏–∂–Ω–∏–π –ë—É—Ç–∞–∫–æ–≤—Å–∫–∏–π –≤–æ–¥–æ–ø–∞–¥.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ú–∞—Ä—à—É—Ä—Ç",
                                                   url="https://www.google.com/maps/@43.1542793,77.083516,3083m/data=!3m1!1e3!4m2!6m1!1s1T_bb0XdDHVKaZuM2BxhKgU6FBOE?hl=ru-RU")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –ë—É—Ç–∞–∫–æ–≤—Å–∫–æ–≥–æ –≤–æ–¥–æ–ø–∞–¥–∞", reply_markup=key)

    elif message.text == "–ú—ã–Ω–∂–∏–ª–∫–∏":
        bot.send_message(message.chat.id,
                         "–£—Ä–æ—á–∏—â–µ –ú—ã–Ω–∂–∏–ª–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞ –≤—ã—Å–æ—Ç–µ 3100 –º–µ—Ç—Ä–æ–≤ –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è. –°–∞–º—ã–π –ª–µ–≥–∫–∏–π —Å–ø–æ—Å–æ–± –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –Ω–µ–≥–æ ‚Äî —ç—Ç–æ –¥–æ—Ä–æ–≥–∞, –±–µ—Ä—É—â–∞—è –Ω–∞—á–∞–ª–æ –æ—Ç –í–°–ö ¬´–ú–µ–¥–µ—É¬ª. –î–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ –ì–õ–ö ¬´–ß–∏–º–±—É–ª–∞–∫¬ª, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–¥—Ç–∏ –≤–≤–µ—Ä—Ö –ø–æ –¥–æ—Ä–æ–≥–µ 5.7 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –ø–µ—à–∫–æ–º.")
        key = telebot.types.InlineKeyboardMarkup()
        t = "–ú—ã–Ω–∂—ã–ª–∫–∏"
        mesta = telebot.types.InlineKeyboardButton(text="–ú–∞—Ä—à—É—Ä—Ç",
                                                   url="https://www.google.com/maps/dir/Carlsberg+Kazakhstan,+Unnamed+Road,,+–ê–ª–º–∞—Ç—ã,+–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω/–ü–ª–æ—Ç–∏–Ω–∞+–ú—ã–Ω–∂—ã–ª–∫–∏,+–ê–ª–º–∞—Ç—ã,+–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω/@43.1115739,77.0427603,15305m/data=!3m1!1e3!4m14!4m13!1m5!1m1!1s0x38836b7f7f05aa09:0xb8068ad520575471!2m2!1d76.915183!2d43.3053436!1m5!1m1!1s0x38837db86b71ad99:0xea7159e2c16db99f!2m2!1d77.0783343!2d43.0845147!3e2?hl=ru-RU")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –ë—É—Ç–∞–∫–æ–≤—Å–∫–∏–µ –≤–æ–¥–æ–ø–∞–¥—ã", reply_markup=key)
    elif message.text == "–õ–µ—Å–Ω–æ–π –ø–µ—Ä–µ–≤–∞–ª":
        bot.send_message(message.chat.id,
                         "–î–∞–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–∞–ª —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –≤–æ—Å—Ç–æ—á–Ω–æ–º –≤–æ–¥–æ—Ä–∞–∑–¥–µ–ª–µ –ë—É—Ç–∞–∫–æ–≤—Å–∫–æ–≥–æ —É—â–µ–ª—å—è. –û–Ω —Å–æ–µ–¥–∏–Ω—è–µ—Ç –ë—É—Ç–∞–∫–æ–≤—Å–∫–æ–µ —É—â–µ–ª—å–µ –∏ —É—â–µ–ª—å–µ –ö–æ—Ç—ã—Ä–±—É–ª–∞–∫ –≤ —Ä–∞–π–æ–Ω–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –±–∞–∑—ã ¬´–ê–ª–º–∞—Ç–∞—É¬ª. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ—Ö–æ–¥–æ–≤ –∫—Ä—É–≥–ª—ã–π –≥–æ–¥, –æ–¥–Ω–∞–∫–æ, –∑–∏–º–æ–π –≤–æ–∑–º–æ–∂–µ–Ω —Å—Ö–æ–¥ –ª–∞–≤–∏–Ω, –ø—Ä–æ—è–≤–ª—è–π—Ç–µ –±–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.")
        key = telebot.types.InlineKeyboardMarkup()
        mesta = telebot.types.InlineKeyboardButton(text="–ú–∞—Ä—à—É—Ä—Ç",
                                                   url="https://www.google.com/maps/@43.1542793,77.083516,3083m/data=!3m1!1e3!4m2!6m1!1s1UWmveE88VWWw4F747lQmlbHSPI4?hl=ru-RU")
        key.add(mesta)
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –¥–æ –õ–µ—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–∞–ª–∞", reply_markup=key)

    elif isinstance(int(message.text), int) and money == "curr":
        money = ""
        if cry == "USD1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/USD'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "GBP1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/GBP'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "RUR1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/RUR'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "CNY1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/CNY'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "EUR1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/EUR'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "UZS1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/UZS'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "JPY1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/JPY'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "KGS1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/KGS'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "KRW1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/KRW'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""
        elif cry == "CHF1":
            url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/CHF'
            response = requests.get(url)
            data = response.json()['rates']
            res = int(message.text) * data['KZT']
            bot.send_message(message.chat.id, res)
            cry = ""

    elif isinstance(int(message.text), int) and money == "kzt":
        print("dgfd")
        url = 'https://v3.exchangerate-api.com/bulk/ed1e4a889e77bbc411367004/KZT'
        response = requests.get(url)
        data = response.json()['rates']
        money = ""
        if cry == "USD":
                res = int(message.text) * data['USD']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "GBP":
                res = int(message.text) * data['GBP']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "RUR":
                res = int(message.text) * data['RUR']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "CNY":
                res = int(message.text) * data['CNY']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "EUR":
                res = int(message.text) * data['EUR']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "UZS":
                res = int(message.text) * data['UZS']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "JPY":
                res = int(message.text) * data['JPY']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "KGS":
                res = int(message.text) * data['KGS']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "KRW":
                res = int(message.text) * data['KRW']
                bot.send_message(message.chat.id, res)
                cry = ""
        elif cry == "CHF":
                res = int(message.text) * data['CHF']
                bot.send_message(message.chat.id, res)
                cry = ""


@bot.message_handler(content_types=['location'])
def handle_location(message):
    global s, ulat, ulng
    ulat = str(message.location.latitude)
    ulng = str(message.location.longitude)
    if(s=="nearbyfood"):
        global food
        path = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=" + food + "&location=" + ulat + "," + ulng + "&radius=300&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['formatted_address']
                keyboard = telebot.types.InlineKeyboardMarkup()
                button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test"+str(i))
                keyboard.add(button)
                if ('opening_hours' in data[i] and 'open_now' in data[i]['opening_hours']):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close " + str(opennow) + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                    bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
                else:
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close Unknown" + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                    bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif(s=='hotel'):
        path = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + ulat + "," + ulng + "&radius=400&type=lodging&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['vicinity']
                keyboard = telebot.types.InlineKeyboardMarkup()
                button = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="test")
                keyboard.add(button)
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close " + str(opennow) + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                    bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
                else:
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close Unknown" + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                    bot.send_message(message.chat.id, "–î–æ–±–∞–≤—å—Ç–µ –≤ —Å–≤–æ–π to do list: ", reply_markup=keyboard)
    elif s == "hospital":
        path = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + ulat + "," + ulng + "&radius=400&type=" + "hospital" + "&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['vicinity']
                if ('rating' in data[i]):
                    rating = data[i]['rating']
                else:
                    rating = "unknown"
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"

            bot.send_message(message.chat.id, "____________________________________")
            bot.send_message(message.chat.id, "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                address) + "\n" + "‚≠êÔ∏è rating: " + str(
                rating) + "\n" + "üö™ Open/Close: " + opennow + "\n" + "üìç location: ")
            bot.send_location(message.chat.id, lat, lng)
        s = ""

    elif s == "store":
        path = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + ulat + "," + ulng + "&radius=500&type=" + "supermarket" + "&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['vicinity']
                if ('rating' in data[i]):
                    rating = data[i]['rating']
                else:
                    rating = "unknown"
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                bot.send_message(message.chat.id, "____________________________________")
                bot.send_message(message.chat.id, "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                    address) + "\n" + "‚≠êÔ∏è rating: " + str(
                    rating) + "\n" + "üö™ Open/Close: " + opennow + "\n" + "üìç location: ")
                bot.send_location(message.chat.id, lat, lng)
        s = ""


@bot.message_handler(content_types=['text'])
def weath(message):
    owm = pyowm.OWM("6e4cdd6906c809a53f60196519cff051")
    city = message.text
    weather = owm.weather_at_place(city)
    w = weather.get_weather()
    temperature = w.get_temperature("celsius")["temp"]
    wind = w.get_wind()["speed"]
    hum = w.get_humidity()
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ " + str(city) + " , —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - " + str(temperature) + "¬∞C, –≤–ª–∞–∂–Ω–æ—Å—Ç—å - " + str(hum) + "%, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - " +str(wind) + "–º/—Å.")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global ulat, ulng, food
    path = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=" + food + "&location=" + str(ulat) + "," + str(ulng) + "&radius=300&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
    with urllib.request.urlopen(path) as url:
        data = json.loads(url.read().decode())['results']
        for i in range(len(data)):
            name = data[i]['name']
            address = data[i]['formatted_address']
            if call.data == "test"+str(i):
                cursor = connection.cursor()
                query = ("INSERT into dbo.food"
                         "(NAME,ADDRESS)"
                         "VALUES(?,?)")
                values = (str(name), str(address))
                #print(values)
                cursor.execute(query, values)
                query2 = ("SELECT NAME, ADDRESS FROM dbo.food")
                cursor.execute(query2)
                results = cursor.fetchall()
                for row in results:
                    NAME = row[0]
                    ADDRESS = row[1]
                    print(str(NAME), str(ADDRESS))
                    bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–î–æ–±–∞–≤–ª–µ–Ω–æ!")
        print("qwerty")
        s = requests.get('https://sxodim.com/almaty/events/vystavki/?show=today')
        b = bs4.BeautifulSoup(s.text, "html.parser")
        l = b.select('.news_list .location')
        c = b.select('.news_list .cost')
        for i in range(0, len(l)):
            print("asdfg")
            if call.data == "test2" + str(i):
                loc = l[i].getText()
                cost = c[i].getText()
                print("yuiop")
                cursor = connection.cursor()
                query = ("INSERT into dbo.event1"
                        "(location,cost)"
                        "VALUES(?,?)")
                values = (loc, cost)
                print(values)
                cursor.execute(query, values)
                print("vbnm")
                query2 = ("SELECT location, cost FROM dbo.event1")
                cursor.execute(query2)
                results = cursor.fetchall()
                print("12345678")
                for row in results:
                    print("ghjkl")
                    location = row[0]
                    cost = row[1]
                    print(str(location), str(cost))

        with urllib.request.urlopen("https://maps.googleapis.com/maps/api/place/textsearch/json?query=museum+in+Almaty&keyword=food&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            print("123456789")
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                name = data[i]['name']
                address = data[i]['formatted_address']
                if call.data == 'test3' + str(i):
                    cursor = connection.cursor()
                    query = ("INSERT into dbo.Mountain"
                             "(name, description)"
                             "VALUES(?,?)")
                    values = (str(name), str(address))
                    # print(values)
                    cursor.execute(query, values)
                    query2 = ("SELECT name, description FROM dbo.Mountain")
                    cursor.execute(query2)
                    results = cursor.fetchall()
                    for row in results:
                        name = row[0]
                        description = row[1]
                        print(str(name), str(description))

        with urllib.request.urlopen("https://maps.googleapis.com/maps/api/place/textsearch/json?query=amusement_park+in+Almaty&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            print("ais")
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                name = data[i]['name']
                address = data[i]['formatted_address']
                if call.data == "test4"+str(i):
                    cursor = connection.cursor()
                    query = ("INSERT into dbo.park"
                             "(name, address)"
                             "VALUES(?,?)")
                    values = (str(name), str(address))
                    print(values)
                    cursor.execute(query, values)
                    query2 = ("SELECT name, address FROM dbo.park")
                    cursor.execute(query2)
                    results = cursor.fetchall()
                    for row in results:
                        name = row[0]
                        address = row[1]
                        print(str(name), str(address))

        with urllib.request.urlopen("https://maps.googleapis.com/maps/api/place/textsearch/json?query=shopping_mall+in+Almaty&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI") as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                name = data[i]['name']
                address = data[i]['formatted_address']
                if call.data == "test5"+str(i):
                    cursor = connection.cursor()
                    query = ("INSERT into dbo.trc"
                             "(name, address)"
                             "VALUES(?,?)")
                    values = (str(name), str(address))
                    # print(values)
                    cursor.execute(query, values)
                    query2 = ("SELECT name, address FROM dbo.trc")
                    cursor.execute(query2)
                    results = cursor.fetchall()
                    for row in results:
                        name = row[0]
                        address = row[1]
                        print(str(name), str(address))
bot.polling(none_stop=True, interval=1)


