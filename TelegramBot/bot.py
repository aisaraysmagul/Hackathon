import pyowm as pyowm
import telebot
import constants
import urllib.request, json
from telebot import types
bot = telebot.TeleBot(constants.token)

s=""

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row("üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üèî –ì–¥–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
    user_markup.row("üìù–ü–ª–∞–Ω–Ω–µ—Ä")
    user_markup.row("‚õÖ –ü–æ–≥–æ–¥–∞")
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', reply_markup=user_markup)


@bot.message_handler(commands=['help'])
def handle_text(message):
    bot.send_message(message.chat.id, "–ü–æ–º–æ—â—å")


@bot.message_handler(content_types=['text'])
def handle_text(message):
    global s
    if message.text == "üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        asian = telebot.types.KeyboardButton(text="–ê–∑–∏–∞—Ç—Å–∫–∞—è")
        national = telebot.types.KeyboardButton(text="–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è")
        europian = telebot.types.KeyboardButton(text="–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è")
        fastfood = telebot.types.KeyboardButton(text="–§–∞—Å—Ç-–§—É–¥")
        turkish = telebot.types.KeyboardButton(text="–¢—É—Ä–µ—Ü–∫–∞—è")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(national, asian, europian, fastfood, turkish, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é", reply_markup=keyboard)
        s="food"
    elif message.text == "–ê–∑–∏–∞—Ç—Å–∫–∞—è":
        key = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        nearby = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        key.add(nearby, listed, back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ê–∑–∏–∞—Ç—Å–∫—É—é –∫—É—Ö–Ω—é", reply_markup=key)
    elif message.text == "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è":
        key = telebot.types.InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        listed = telebot.types.InlineKeyboardButton(text="–í—Å–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è", url="https://www.visitalmaty.kz/ru/cuisines")
        '''nearby = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")'''
        key.add(listed)
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∫—É—Ö–Ω—é", reply_markup=key)
    elif message.text == "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è":
        key = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        nearby = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        key.add(nearby, listed, back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ï–≤—Ä–æ–ø–µ–π—Å–∫—É—é –∫—É—Ö–Ω—é", reply_markup=key)
    elif message.text == "–§–∞—Å—Ç-–§—É–¥":
        key = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        nearby = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        key.add(nearby, listed, back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –§–∞—Å—Ç-–§—É–¥", reply_markup=key)
    elif message.text == "–¢—É—Ä–µ—Ü–∫–∞—è":
        key = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        nearby = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        key.add(nearby, listed, back)
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢—É—Ä–µ—Ü–∫—É—é –∫—É—Ö–Ω—é", reply_markup=key)
    elif message.text == "‚õÖ –ü–æ–≥–æ–¥–∞":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(back)
        city = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –í–∞–º –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥–∫—É?", reply_markup=keyboard)
        bot.register_next_step_handler(city, weath)
    elif message.text == "üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?":
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button = telebot.types.KeyboardButton(text="–ë–ª–∏–∂–∞–π—â–µ–µ", request_location=True)
        listed = telebot.types.KeyboardButton(text="–°–ø–∏—Å–æ–∫")
        back = telebot.types.KeyboardButton(text="‚óÄ –ù–∞–∑–∞–¥")
        keyboard.add(button, listed, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ", reply_markup=keyboard)
        s = "hotel"
    elif message.text == "‚óÄ –ù–∞–∑–∞–¥":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row("üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üèî –ì–¥–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üõè –ì–¥–µ –ø–µ—Ä–µ–Ω–æ—á–µ–≤–∞—Ç—å –≤ –ê–ª–º–∞—Ç—ã ?")
        user_markup.row("üìù–ü–ª–∞–Ω–Ω–µ—Ä")
        user_markup.row("‚õÖ –ü–æ–≥–æ–¥–∞")
        bot.send_message(message.chat.id, '–ú–µ–Ω—é', reply_markup=user_markup)

def weath(message):
    owm = pyowm.OWM("6e4cdd6906c809a53f60196519cff051")
    city = message.text
    weather = owm.weather_at_place(city)
    w = weather.get_weather()
    temperature = w.get_temperature("celsius")["temp"]
    wind = w.get_wind()["speed"]
    hum = w.get_humidity()
    desc = w.get_detailed_status()
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ " + str(city) + " " + str(desc) + ", —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - " + str(temperature) + "¬∞C, –≤–ª–∞–∂–Ω–æ—Å—Ç—å - " + str(hum) + "%, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - " +str(wind) + "–º/—Å.")



@bot.message_handler(content_types=['location'])
def handle_location(message):
    ulat = str(message.location.latitude)
    ulng = str(message.location.longitude)
    if(s=='food'):
        path = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + ulat + "," + ulng + "&radius=300&type=cafe&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        ind=0
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                rating = data[i]['rating']
                address = data[i]['vicinity']
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(address) + "\n" + "‚≠ê rating: " + str(
                                         rating) + "\n" + "üö™ Open/Close " + str(opennow)+"\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                else:
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "‚≠ê rating: " + str(
                                         rating) + "\n" + "üö™ Open/Close Unknown" + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
    elif(s=='hotel'):
        path = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=" + ulat + "," + ulng + "&radius=400&type=lodging&key=AIzaSyC0AuanxSq5DMmcnojnInlFRzqz0KF5HZI"
        ind = 0
        with urllib.request.urlopen(path) as url:
            data = json.loads(url.read().decode())['results']
            for i in range(len(data)):
                lat = data[i]['geometry']['location']['lat']
                lng = data[i]['geometry']['location']['lng']
                name = data[i]['name']
                address = data[i]['vicinity']
                if ('opening_hours' in data[i]):
                    openow = data[i]['opening_hours']['open_now']
                    opennow = ""
                    if (openow == True):
                        opennow = "Open"
                    elif (openow == False):
                        opennow = "Close"
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close " + str(opennow) + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)
                else:
                    bot.send_message(message.chat.id, "____________________________________")
                    bot.send_message(message.chat.id,
                                     "üìå name: " + str(name) + "\n" + "üìç address: " + str(
                                         address) + "\n" + "üö™ Open/Close Unknown" + "\n" + "üìç location: ")
                    bot.send_location(message.chat.id, lat, lng)

bot.polling(none_stop=True, interval=1)
